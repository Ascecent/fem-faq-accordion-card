@use "sass:math";

/*=========================================================
================       CORE STYLES        =================
=========================================================*/

// -------------------------------
// FUNCTIONS
// -------------------------------

// Convert px to rem units
@function pxToRem($unit) {
  @return math.div($unit, 16) + rem;
}

// -------------------------------

// -------------------------------
// VARIABLES
// -------------------------------

// ------------
// BREAKPOINTS
// ------------

$breakpoints: (
  xxsm: 400px,
  xsm: 540px,
  sm: 576px,
  md: 768px,
  lg: 1024px,
  xlg: 1400px,
);

// ------------

// ------------
// COLORS
// ------------

// Primary
$veryDarkDesaturatedBlue: hsl(238, 29%, 16%);
$softRed: hsl(14, 88%, 65%);

// Gradient
$softViolet: hsl(273, 75%, 66%);
$softBlue: hsl(240, 73%, 65%);

// Neutral
$white: rgb(255, 255, 255);
$black: rgb(0, 0, 0);
$veryDarkGrayishBlue: hsl(237, 12%, 33%);
$darkGrayishBlue: hsl(240, 6%, 50%);
$lightGrayishBlue: hsl(240, 5%, 91%);

// ------------

// ------------
// FONTS
// ------------

// Family
$fontFamilyPrimary: "Kumbh Sans", sans-serif;

// Weights
$fontRegular: 400;
$fontBold: 700;

// Sizes
$fontNormal: pxToRem(12);
$fontSm: pxToRem(14);
$fontHeading: pxToRem(30);

// ------------

// -------------------------------

// -------------------------------
// MIXINS
// -------------------------------

// Background gradient
@mixin gradient {
  background: linear-gradient(to bottom, $softViolet, $softBlue) center/cover
    no-repeat;
}

// Media breakpoint min-width
@mixin media-breakpoint-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Media breakpoint max-width
@mixin media-breakpoint-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    $breakpoint-value: map-get($breakpoints, $breakpoint);

    @media (max-width: ($breakpoint-value - 1)) {
      @content;
    }
  } @else {
    @warn 'Invalid breakpoint: #{$breakpoint}.';
  }
}

// Pseudo element basic styles
@mixin pseudo-element {
  content: "";
  position: absolute;
  width: 100%;
}

// -------------------------------

// -------------------------------
// GLOBAL STYLES
// -------------------------------

body {
  @include gradient;

  font: {
    size: $fontNormal;
    weight: $fontRegular;
    family: $fontFamilyPrimary;
  }

  min-height: 100vh;
}

// -------------------------------
